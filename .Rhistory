start=pi/2
)
pie3D(x,
main="광역시도별 투표율",
col=rainbow(length(label)),
labels=label,
labelcex=0.7,
radius=1,
)
pie3D(x,
main="광역시도별 투표율",
col=rainbow(length(label)),
labels=label,
labelcex=0.7,
radius=1
)
pie3D(x,
main="광역시도별 투표율",
col=rainbow(length(label)),
labels=label,
labelcex=0.7,
radius=1,
height=5
)
pie3D(x,
main="광역시도별 투표율",
col=rainbow(length(label)),
labels=label,
labelcex=0.7,
radius=1,
height=1
)
pie3D(x,
main="광역시도별 투표율",
col=rainbow(length(label)),
labels=label,
labelcex=0.7,
radius=1
)
pie3D(x,
main="광역시도별 투표율",
col=rainbow(length(label)),
labels=label,
labelcex=0.7,
radius=1,
shade=0.8
)
pie3D(x,
main="광역시도별 투표율",
col=rainbow(length(label)),
labels=label,
labelcex=0.7,
radius=1,
shade=0.5
)
pie3D(x,
main="광역시도별 투표율",
col=rainbow(length(label)),
labels=label,
labelcex=0.7,
radius=1,
shade=5
)
pie3D(x,
main="광역시도별 투표율",
col=rainbow(length(label)),
labels=label,
labelcex=0.7,
radius=1,
shade=0.01
)
pie3D(x,
main="광역시도별 투표율",
col=rainbow(length(label)),
labels=label,
labelcex=0.7,
radius=1,
shade=0.1
)
pie3D(x,
main="광역시도별 투표율",
col=rainbow(length(label)),
labels=label,
labelcex=0.7,
radius=1,
shade=0.7
)
pie3D(x,
main="광역시도별 투표율",
col=rainbow(length(label)),
labels=label,
labelcex=0.7,
radius=1,
)
pie3D(x,
main="광역시도별 투표율",
col=rainbow(length(label)),
labels=label,
labelcex=0.7,
radius=1
)
sum(x[c(1,2,5),2])
sum(y[c(1,2,5),2])
sum(y[c(1,2,5),2])/sum(y[,2])*100
round(sum(y[c(1,2,5),2])/sum(y[,2])*100,2)
paste(round(sum(y[c(1,2,5),2])/sum(y[,2])*100,2),"%")
paste(plabels,"\n",round(x/sum(y$투표수)*100,2),"%")
ifelse(round(x/sum(y$투표수)*100,2)<3,paste(plabels,"\n",round(x/sum(y$투표수)*100,2),"%"),plabels)
ifelse(round(x/sum(y$투표수)*100,2)>3,paste(plabels,"\n",round(x/sum(y$투표수)*100,2),"%"),plabels)
label2=ifelse(round(x/sum(y$투표수)*100,2)>3,paste(plabels,"\n",round(x/sum(y$투표수)*100,2),"%"),plabels)
pie3D(x,
main="광역시도별 투표율",
col=rainbow(length(label)),
labels=label2,
labelcex=0.7,
radius=1
)
pie3D(x,
main="광역시도별 투표율",
col=rainbow(length(label)),
labels=label2,
labelcex=0.7,
)
label2=ifelse(round(x/sum(y$투표수)*100,2)>3,paste(plabels,"\n",round(x/sum(y$투표수)*100,2),"%"),plabels)
pie3D(x,
main="광역시도별 투표율",
col=rainbow(length(label)),
labels=label2,
labelcex=0.7,
)
yoon=arrange(aggregate(윤석열~광역시도,election,sum),desc(윤석열))
xyoon=as.vector(yoon[,2])
plabels=as.vector(yoon[,1])
label2=ifelse(round(xyoon/sum(yoon$윤석열)*100,2)>3,paste(plabels,"\n",round(xyoon/sum(yoon$윤석열)*100,2),"%"),plabels)
y=arrange(aggregate(투표수~광역시도,election,sum),desc(투표수))
x=as.vector(y[,2])
plabels=as.vector(y[,1])
label=paste(plabels,"\n",round(x/sum(y$투표수)*100,2),"%")
pie3D(x,
main="광역시도별 투표율",
col=rainbow(length(label)),
labels=label,
labelcex=0.7,
radius=1
)
label2=ifelse(round(x/sum(y$투표수)*100,2)>3,paste(plabels,"\n",round(x/sum(y$투표수)*100,2),"%"),plabels)
pie3D(x,
main="광역시도별 투표율",
col=rainbow(length(label)),
labels=label2,
labelcex=0.7,
)
yoon=arrange(aggregate(윤석열~광역시도,election,sum),desc(윤석열))
xyoon=as.vector(yoon[,2])
yplabels=as.vector(yoon[,1])
ylabel2=ifelse(round(xyoon/sum(yoon$윤석열)*100,2)>3,paste(yplabels,"\n",round(xyoon/sum(yoon$윤석열)*100,2),"%"),yplabels)
pie3D(xyoon,
main="윤석열 후보의 광역시도별 득표율",
col=rainbow(length(ylabel2)),
labels=ylabel2,
labelcex=0.7,
)
yoon=arrange(aggregate(윤석열~광역시도,election,sum),desc(윤석열))
xyoon=as.vector(yoon[,2])
yplabels=as.vector(yoon[,1])
ylabel2=ifelse(round(xyoon/sum(yoon$윤석열)*100,1)>3,paste(yplabels,"\n",round(xyoon/sum(yoon$윤석열)*100,1),"%"),yplabels)
pie3D(xyoon,
main="윤석열 후보의 광역시도별 득표율",
col=rainbow(length(ylabel2)),
labels=ylabel2,
labelcex=0.7,
)
lee=arrange(aggregate(이재명~광역시도,election,sum),desc(이재명))
xlee=as.vector(lee[,2])
lplabels=as.vector(lee[,1])
llabel2=ifelse(round(xlee/sum(lee$이재명)*100,1)>3,paste(lplabels,"\n",round(xlee/sum(lee$이재명)*100,1),"%"),lplabels)
pie3D(xlee,
main="이재명 후보의 광역시도별 득표율",
col=rainbow(length(llabel2)),
labels=llabel2,
labelcex=0.7,
)
lee=arrange(aggregate(이재명~광역시도,election,sum),desc(이재명))
xlee=as.vector(lee[,2])
lplabels=as.vector(lee[,1])
llabel2=ifelse(round(xlee/sum(lee$이재명)*100,1)>3,paste(lplabels,"\n",round(xlee/sum(lee$이재명)*100,1),"%"),lplabels)
pie3D(xlee,
main="이재명 후보의 광역시도별 득표율",
col=rainbow(length(llabel2)),
labels=llabel2,
labelcex=0.7,
)
lee=arrange(aggregate(이재명~광역시도,election,sum),desc(이재명))
xlee=as.vector(lee[,2])
lplabels=as.vector(lee[,1])
llabel2=ifelse(round(xlee/sum(lee$이재명)*100,1)>3,paste(lplabels,"\n",round(xlee/sum(lee$이재명)*100,1),"%"),lplabels)
pie3D(xlee,
main="이재명 후보의 광역시도별 득표율",
col=rainbow(length(llabel2)),
labels=llabel2,
labelcex=0.7,
)
lee=arrange(aggregate(이재명~광역시도,election,sum),desc(이재명))
xlee=as.vector(lee[,2])
lplabels=as.vector(lee[,1])
llabel2=ifelse(round(xlee/sum(lee$이재명)*100,1)>3,paste(lplabels,"\n",round(xlee/sum(lee$이재명)*100,1),"%"),lplabels)
pie3D(xlee,
main="이재명 후보의 광역시도별 득표율",
col=rainbow(length(llabel2)),
labels=llabel2,
labelcex=0.7,
)
lee=arrange(aggregate(이재명~광역시도,election,sum),desc(이재명))
election=read.csv("election_2022.csv")
head(election)
tail(election)
str(election)
summary(election)
length(unique(election$광역시도))
length(unique(election$시군구))
nrow(subset(election,election$시군구=="구로구"))
sum(is.na(election))
election$광역시도=as.factor(election$광역시도)
election$시군구=as.factor(election$시군구)
election$electionSum=apply(election[,5:7], 1, sum)
election$electionRatio=election$electionSum/election$투표수*100
mean(election$electionRatio)
library(dplyr)
arrange(subset(election,electionRatio==max(election$electionRatio)
|election$electionRatio==min(electionRatio)),
desc(electionRatio))
arrange(election[,c(1:2,9)],desc(electionRatio))[1,]
arrange(election[,c(1:2,9)],desc(electionRatio))[nrow(election),]
write.csv(election,"election.csv",row.names=F)
y=arrange(aggregate(투표수~광역시도,election,sum),desc(투표수))
x=as.vector(y[,2])
plabels=as.vector(y[,1])
label=paste(plabels,"\n",round(x/sum(y$투표수)*100,2),"%")
library(plotrix)
pie3D(x,
main="광역시도별 투표율",
col=rainbow(length(label)),
labels=label,
labelcex=0.7,
radius=1
)
paste(round(sum(y[c(1,2,5),2])/sum(y[,2])*100,2),"%")
label2=ifelse(round(x/sum(y$투표수)*100,2)>3,paste(plabels,"\n",round(x/sum(y$투표수)*100,2),"%"),plabels)
pie3D(x,
main="광역시도별 투표율",
col=rainbow(length(label2)),
labels=label2,
labelcex=0.7,
)
yoon=arrange(aggregate(윤석열~광역시도,election,sum),desc(윤석열))
xyoon=as.vector(yoon[,2])
yplabels=as.vector(yoon[,1])
ylabel2=ifelse(round(xyoon/sum(yoon$윤석열)*100,1)>3,paste(yplabels,"\n",round(xyoon/sum(yoon$윤석열)*100,1),"%"),yplabels)
pie3D(xyoon,
main="윤석열 후보의 광역시도별 득표율",
col=rainbow(length(ylabel2)),
labels=ylabel2,
labelcex=0.7,
)
lee=arrange(aggregate(이재명~광역시도,election,sum),desc(이재명))
xlee=as.vector(lee[,2])
lplabels=as.vector(lee[,1])
llabel2=ifelse(round(xlee/sum(lee$이재명)*100,1)>3,paste(lplabels,"\n",round(xlee/sum(lee$이재명)*100,1),"%"),lplabels)
pie3D(xlee,
main="이재명 후보의 광역시도별 득표율",
col=rainbow(length(llabel2)),
labels=llabel2,
labelcex=0.7,
)
subset(election[,c(2,6)])
subset(election[1:5,c(2,6)])
subset(election[1:5,c(2,6)])
subset(election[-(1;5),c(2,6)])
subset(election[1:5,c(2,6)])
subset(election[-(1:5),c(2,6)])
subset(election[1:5,c(2,6)])
sum(subset(election[-(1:5),c(2,6)]))
subset(election[1:5,c(2,6)])
sum(subset(election[-(1:5),c(2,6)])[2])
subset(election,시군구="서울특별시")
sbst=subset(election,시군구="서울특별시")
arrange(sbst,desc(윤석열))
sbst=subset(election,광역시도="서울특별시")
arrange(sbst,desc(윤석열))
sbst=subset(election,광역시도=="서울특별시")
arrange(sbst,desc(윤석열))
sbst=subset(election,광역시도=="서울특별시")
asbst=arrange(sbst,desc(윤석열))
asbst=arrange(sbst,desc(윤석열))
asbst
asbst5=head(asbst,5)
asbst5
asbst5=head(asbst,5)[,c(2,6)]
asbst5
sumsbst=sum(asbst[,2])
asbst
sbst=subset(election,광역시도=="서울특별시")
asbst=arrange(sbst,desc(윤석열))[,c(2,6)]
asbst
sumsbst=sum(asbst[,2])
sumsbst
sumext=sum(asbst[6:nrow(asbst),2])
sumext
sumsbst
asbst5
slabel
slabel=c(asbst5[,1],"기타")
slabel
asbst5
asbst5=head(asbst,5)[,c(2,6)]
asbst5=head(asbst,5)[,1:2]
asbst5
slabel=c(asbst5[,1],"기타")
slabel
slabel=c(asbst5[,1],"기타")
slabel
asbst5[,1]
election=read.csv("election_2022.csv")
head(election)
tail(election)
str(election)
summary(election)
length(unique(election$광역시도))
length(unique(election$시군구))
nrow(subset(election,election$시군구=="구로구"))
sum(is.na(election))
election$electionSum=apply(election[,5:7], 1, sum)
election$electionRatio=election$electionSum/election$투표수*100
mean(election$electionRatio)
library(dplyr)
arrange(subset(election,electionRatio==max(election$electionRatio)
|election$electionRatio==min(electionRatio)),
desc(electionRatio))
arrange(election[,c(1:2,9)],desc(electionRatio))[1,]
arrange(election[,c(1:2,9)],desc(electionRatio))[nrow(election),]
write.csv(election,"election.csv",row.names=F)
y=arrange(aggregate(투표수~광역시도,election,sum),desc(투표수))
x=as.vector(y[,2])
plabels=as.vector(y[,1])
label=paste(plabels,"\n",round(x/sum(y$투표수)*100,2),"%")
library(plotrix)
pie3D(x,
main="광역시도별 투표율",
col=rainbow(length(label)),
labels=label,
labelcex=0.7,
radius=1
)
paste(round(sum(y[c(1,2,5),2])/sum(y[,2])*100,2),"%")
label2=ifelse(round(x/sum(y$투표수)*100,2)>3,paste(plabels,"\n",round(x/sum(y$투표수)*100,2),"%"),plabels)
pie3D(x,
main="광역시도별 투표율",
col=rainbow(length(label2)),
labels=label2,
labelcex=0.7,
)
yoon=arrange(aggregate(윤석열~광역시도,election,sum),desc(윤석열))
xyoon=as.vector(yoon[,2])
yplabels=as.vector(yoon[,1])
ylabel2=ifelse(round(xyoon/sum(yoon$윤석열)*100,1)>3,paste(yplabels,"\n",round(xyoon/sum(yoon$윤석열)*100,1),"%"),yplabels)
pie3D(xyoon,
main="윤석열 후보의 광역시도별 득표율",
col=rainbow(length(ylabel2)),
labels=ylabel2,
labelcex=0.7,
)
lee=arrange(aggregate(이재명~광역시도,election,sum),desc(이재명))
xlee=as.vector(lee[,2])
lplabels=as.vector(lee[,1])
llabel2=ifelse(round(xlee/sum(lee$이재명)*100,1)>3,paste(lplabels,"\n",round(xlee/sum(lee$이재명)*100,1),"%"),lplabels)
pie3D(xlee,
main="이재명 후보의 광역시도별 득표율",
col=rainbow(length(llabel2)),
labels=llabel2,
labelcex=0.7,
)
sbst=subset(election,광역시도=="서울특별시")
asbst=arrange(sbst,desc(윤석열))[,c(2,6)]
asbst
election=read.csv("election_2022.csv")
head(election)
tail(election)
str(election)
summary(election)
length(unique(election$광역시도))
length(unique(election$시군구))
nrow(subset(election,election$시군구=="구로구"))
sum(is.na(election))
election$electionSum=apply(election[,5:7], 1, sum)
election$electionRatio=election$electionSum/election$투표수*100
mean(election$electionRatio)
library(dplyr)
arrange(subset(election,electionRatio==max(election$electionRatio)
|election$electionRatio==min(electionRatio)),
desc(electionRatio))
arrange(election[,c(1:2,9)],desc(electionRatio))[1,]
arrange(election[,c(1:2,9)],desc(electionRatio))[nrow(election),]
write.csv(election,"election.csv",row.names=F)
y=arrange(aggregate(투표수~광역시도,election,sum),desc(투표수))
x=as.vector(y[,2])
plabels=as.vector(y[,1])
label=paste(plabels,"\n",round(x/sum(y$투표수)*100,2),"%")
library(plotrix)
pie3D(x,
main="광역시도별 투표율",
col=rainbow(length(label)),
labels=label,
labelcex=0.7,
radius=1
)
paste(round(sum(y[c(1,2,5),2])/sum(y[,2])*100,2),"%")
label2=ifelse(round(x/sum(y$투표수)*100,2)>3,paste(plabels,"\n",round(x/sum(y$투표수)*100,2),"%"),plabels)
pie3D(x,
main="광역시도별 투표율",
col=rainbow(length(label2)),
labels=label2,
labelcex=0.7,
)
yoon=arrange(aggregate(윤석열~광역시도,election,sum),desc(윤석열))
xyoon=as.vector(yoon[,2])
yplabels=as.vector(yoon[,1])
ylabel2=ifelse(round(xyoon/sum(yoon$윤석열)*100,1)>3,paste(yplabels,"\n",round(xyoon/sum(yoon$윤석열)*100,1),"%"),yplabels)
pie3D(xyoon,
main="윤석열 후보의 광역시도별 득표율",
col=rainbow(length(ylabel2)),
labels=ylabel2,
labelcex=0.7,
)
lee=arrange(aggregate(이재명~광역시도,election,sum),desc(이재명))
xlee=as.vector(lee[,2])
lplabels=as.vector(lee[,1])
llabel2=ifelse(round(xlee/sum(lee$이재명)*100,1)>3,paste(lplabels,"\n",round(xlee/sum(lee$이재명)*100,1),"%"),lplabels)
pie3D(xlee,
main="이재명 후보의 광역시도별 득표율",
col=rainbow(length(llabel2)),
labels=llabel2,
labelcex=0.7,
)
sbst=subset(election,광역시도=="서울특별시")
asbst=arrange(sbst,desc(윤석열))[,c(2,6)]
asbst
sumsbst=sum(asbst[,2])
sumsbst
sumext=sum(asbst[6:nrow(asbst),2])
sumext
asbst5=head(asbst,5)[,1:2]
asbst5[,1]
slabel=c(asbst5[,1],"기타")
slabel
slabel=paste(c(asbst5[,1],"기타"),"\n",c(asbst5[,2]/sumsbst,sumext/sumsbst),"%")
slabel
slabel=paste(c(asbst5[,1],"기타"),"\n",
c(roundasbst5[,2]/sumsbst*100,2),
round(sumext/sumsbst*100,2),"%")
slabel=paste(c(asbst5[,1],"기타"),"\n",
c(round(asbst5[,2]/sumsbst*100,2),
round(sumext/sumsbst*100,2),"%")
slabel
slabel=paste(c(asbst5[,1],"기타"),"\n",
c(round(asbst5[,2]/sumsbst*100,2),
round(sumext/sumsbst*100,2),"%"))
slabel
slabel=paste(c(asbst5[,1],"기타"),"\n",
c(round(asbst5[,2]/sumsbst*100,2),
round(sumext/sumsbst*100,2)),"%")
slabel
yoondata=c(head(asbst,5)[,2])
yoondata
yoondata=c(head(asbst,5)[,2],sumext)
yoondata
pie3D(xlee,
main="이재명 후보의 광역시도별 득표율",
col=rainbow(length(llabel2)),
labels=slabel,
labelcex=0.7,
)
pie3D(xlee,
main="이재명 후보의 광역시도별 득표율",
col=rainbow(length(llabel2)),
labels=llabel,
labelcex=0.7,
)
pie3D(yoondata,
main="윤석열 후보의 서울 득표율 TOP5",
col=rainbow(length(llabel2)),
labels=slabel,
labelcex=0.7,
)
pie3D(yoondata,
main="윤석열 후보의 서울 득표율 TOP5",
col=rainbow(length(6)),
labels=slabel,
labelcex=0.7,
)
pie3D(yoondata,
main="윤석열 후보의 서울 득표율 TOP5",
col=rainbow(length(yoondata)),
labels=slabel,
labelcex=0.7,
)
pie3D(yoondata,
main="윤석열 후보의 서울 득표율 TOP5",
col=rainbow(length(yoondata)),
labels=slabel,
labelcex=0.7,
explode=0.1
)
